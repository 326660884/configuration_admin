<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.cnic.security.configuration.dao.UserAppListDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cn.cnic.security.configuration.entity.UserAppListEntity" id="UserAppListMap">
        <result property="cId" column="c_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="clientId" column="client_id"/>
        <result property="appName" column="app_name"/>
    </resultMap>


    <select id="selectAppListPage" resultMap="UserAppListMap">
        SELECT
            app.c_id,
            app.user_id,
            app.user_name,
            app.client_id,
            app_authentication.app_name
        FROM
            (
                SELECT
                    ca_user_app_explain.c_id,
                    users.user_id,
                    users.user_name,
                    ca_user_app_explain.client_id
                FROM
                    (
                        SELECT
                            ca_user.user_name,
                            ca_user.user_id
                        FROM
                            ca_user
                        WHERE
                                ca_user.user_id IN ( SELECT ca_user_app_explain.user_id FROM ca_user_app_explain )
                        LIMIT #{minPage},#{pageSize}
                    ) AS users
                        LEFT JOIN ca_user_app_explain ON users.user_id = ca_user_app_explain.user_id
                WHERE
                    ca_user_app_explain.c_id IS NOT NULL
                  AND ca_user_app_explain.deactivation = '0'
            ) AS app,
            app_authentication
        WHERE
            app.client_id = app_authentication.client_id
    </select>
    <select id="selectAppListPageByUserName" resultMap="UserAppListMap">
        SELECT
            app.c_id,
            app.user_id,
            app.user_name,
            app.client_id,
            app_authentication.app_name
        FROM
            (
                SELECT
                    ca_user_app_explain.c_id,
                    users.user_id,
                    users.user_name,
                    ca_user_app_explain.client_id
                FROM
                    (
                        SELECT
                            ca_user.user_name,
                            ca_user.user_id
                        FROM
                            ca_user
                        WHERE
                            ca_user.user_id IN ( SELECT ca_user_app_explain.user_id FROM ca_user_app_explain )
                            AND ca_user.user_name LIKE #{userName}
                        LIMIT #{minPage},#{pageSize}
                    ) AS users
                        LEFT JOIN ca_user_app_explain ON users.user_id = ca_user_app_explain.user_id
                WHERE
                    ca_user_app_explain.c_id IS NOT NULL
                  AND ca_user_app_explain.deactivation = '0'
            ) AS app,
            app_authentication
        WHERE
            app.client_id = app_authentication.client_id
    </select>

    <update id="logicDelete">
        UPDATE ca_user_app_explain
        SET deactivation = '1'
        WHERE
            ca_user_app_explain.user_id = #{userId}
          AND ca_user_app_explain.client_id = #{clientId}
    </update>

</mapper>

